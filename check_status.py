#!/usr/bin/env python3
"""
Status check script for SKF Orbitbot application
"""

import requests
import sys
from datetime import datetime

def check_service(url, name, timeout=5):
    """Check if a service is running"""
    try:
        response = requests.get(url, timeout=timeout)
        if response.status_code == 200:
            print(f"‚úÖ {name}: Running (Status: {response.status_code})")
            return True
        else:
            print(f"‚ö†Ô∏è  {name}: Running but returned status {response.status_code}")
            return False
    except requests.exceptions.ConnectionError:
        print(f"‚ùå {name}: Not running or not accessible")
        return False
    except requests.exceptions.Timeout:
        print(f"‚è∞ {name}: Timeout - service might be slow")
        return False
    except Exception as e:
        print(f"‚ùå {name}: Error - {str(e)}")
        return False

def main():
    print("üîç SKF Orbitbot Application Status Check")
    print("=" * 50)
    print(f"‚è∞ Check time: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    # Check services
    services = [
        ("http://localhost:8000/docs", "Backend API (FastAPI)"),
        ("http://localhost:8050", "Frontend (Dash)"),
    ]
    
    results = []
    for url, name in services:
        results.append(check_service(url, name))
    
    print()
    print("üìä Summary:")
    print("-" * 30)
    
    if all(results):
        print("üéâ All services are running successfully!")
        print()
        print("üåê Access URLs:")
        print("   ‚Ä¢ Frontend (Dash): http://localhost:8050")
        print("   ‚Ä¢ Backend API: http://localhost:8000")
        print("   ‚Ä¢ API Docs: http://localhost:8000/docs")
        print()
        print("üîê Default Admin Credentials:")
        print("   ‚Ä¢ Username: admin")
        print("   ‚Ä¢ Password: admin123")
        sys.exit(0)
    else:
        print("‚ö†Ô∏è  Some services are not running properly.")
        print("   Please check the individual service logs.")
        sys.exit(1)

if __name__ == "__main__":
    main()


